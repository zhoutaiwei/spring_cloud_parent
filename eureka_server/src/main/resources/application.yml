server:
 # port: ${random.int[1000,9999]}
 port: 1111
management:
  context-path: /hello
eureka:
  instance:
    hostname: localhost
#################################################
    #定义服务续约任务的调用间隔时间,客户端向服务端发送心跳的时间间隔
    lease-renewal-interval-in-seconds: 30
    #定义服务时效时间，超时就会 被剔除
    lease-expiration-duration-in-seconds: 90
    #利用应用名随机数的方式来区分不同的实例，从而实现在同一主机上，不指定端口就能轻松启动多个实例
  #  instance-id: ${spring.application.name}:${random.int}
    status-page-url-path: ${management.context-path}/info
    health-check-url-path: ${management.context-path}/health
  client:
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
  server:
  #关闭保护机制，确保注册中心可以将不可用的实例正确剔除(false 为关闭)
    enable-self-preservation: true
##################ribbon重试配置###############################
hello-service:
  ribbon:
    ConnectTimeout: 250 #请求连接的超时时间
    ReadTimeout: 1000 #请求处理的超时时间
    OkToRetyOnAllOperations: true #对所有请求都进行重试
    MaxAutoRetriesNextServer: 2 #切换实例的重试次数（当有多个实例时）
    MaxAutoRetries: 1 #对当前实例的重试次数
#该参数用来开启重试机制
spring:
  cloud:
    loadbalancer:
      retry:
        enabled: true
#########################################################
#######################断路器配置##################################
#断路器的超时时间需要大于Ribbon的超时时间，不然不会触发重试
hystrix:
  command:
    default:
      execution:
      isolation:
        thread:
          timeoutInMilliseconds: 10000
#########################################################
